;(defvar *last-package* nil)
;(defvar *cached-prompt* nil)
;  
;(defun package-prompt (stream)
;  (unless (eq *last-package* *package*)
;    (setf *cached-prompt*
;          (concatenate 'string (or (first (package-nicknames *package*))
;                                   (package-name *package*))
;                       "> "))
;    (setf *last-package* *package*))
;  (terpri)
;  (princ *cached-prompt* stream))
;
;(let ((prompt-counter 0))
;  (defun package-prompt-with-counter (stream)
;    (princ
;     (format nil "~%~A[~A]> " 
;             (or (first (package-nicknames *package*))
;                 (package-name *package*))
;             (incf prompt-counter))
;     stream)))
;
;
;(setf sb-int:*repl-prompt-fun* #'package-prompt-with-counter)


; http://common-lisp.net/project/asdf-install/tutorial/setup.html|#
(require :asdf)
(require :asdf-install)
;(pushnew
;  (merge-pathnames "Lisp/asdf-systems/" (user-homedir-pathname))
;  asdf:*central-registry* :test #'equal)

;;; Check for --no-linedit command-line option.
;(if (member "--no-linedit" sb-ext:*posix-argv* :test 'equal)
;    (setf sb-ext:*posix-argv* 
;          (remove "--no-linedit" sb-ext:*posix-argv* :test 'equal))
;    (when (interactive-stream-p *terminal-io*)
;      (require :sb-aclrepl)
;      (require :linedit)
;      (funcall (intern "INSTALL-REPL" :linedit) :wrap-current t)))

(require :sb-aclrepl)
